help(package="vcd")
rm(y)
rm(findruns())
rm(findruns
)
rm(findruns1)
target <- read.table("Target.txt",header = TRUE)
untarget <- read.table("Untarget.txt",header = TRUE)
trow <- nrow(a)
trow <- nrow(target)
trow
target(1,2)
target[1,2]
1 & 0
source("TargetCompare.R")
source("TargetCompare.R")
target_compare("Target.txt","Untarget.txt","results1.txt")
target_compare("Target.txt","Untarget.txt","results.xls")
class(target)
target_compare("Target.txt","Untarget.txt","results.xls")
source("TargetCompare.R")
target_compare("Target.txt","Untarget.txt","results1.txt")
source("TargetCompare.R")
target_compare("Target.txt","Untarget.txt","results1.txt")
remove(target,untarget)
remove(i,j,trow,urow,y,z)
rm(target_compare())
rm(target_compare
)
install.packages("xlsx")
install.packages("rJava")
installed.packages()
library(xlsx)
library(xlsx)
Sys.setenv(JAVA_HOME='C:\Program Files\java')
Sys.setenv(JAVA_HOME='C:/Program Files/java')
library(xlsx)
Sys.setenv(JAVA_HOME='C:/Program Files(x86)/java')
library(xlsx)
library(xlsx)
library(xlsx)
library(rJava)
library(xlsxjars)
library(xlsx)
install.packages("rmarkdown", dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
library(tufte)
# tufte版本变化之后更新knitr缓存
knitr::opts_chunk$set(tidy = FALSE, cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
ggplot(diamonds, aes(carat, price)) + geom_smooth() +
facet_grid(~ cut)
unlink('chapter3-note_cache', recursive = TRUE)
plot(cars)
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
detach(mtcars)
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
detach(mtcars)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose, drugA, type = "b")
opar <- par(no.readonly = TRUE)
par(lty=2, pch=17)
plot(dose, drugA, type="b")
par(opar)
plot(dose, drugA, type="b", Ity=2, pch=17)
plot(dose, drugA, type="b", lty=2, pch=17)
plot(dose, drugA, type="b", lty=3, lwd=3, pch=15, cex =2)
install.packages("RColorBrewer",dependencies = TRUE)
install.packages("RColorBrewer",dependencies = TRUE)
install.packages("RColorBrewer")
mycolors <- rainbow(n)
mycolors <- rainbow(10)
pie(rep(1, 10), labels = mycolors, col=mycolors)
mygray <- gray(0:10/10)
pie(rep(1, 10), labels = mygray, col = mygray)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(pin=c(2, 3))
par(lwd=2, cex=1.5)
par(cex.axis=.75, font.axis=3)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, clo="blue", bg="green")
par(opar)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(pin=c(2, 3))
par(lwd=2, cex=1.5)
par(cex.axis=.75, font.axis=3)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, clo="blue", bg="green")
par(opar)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(pin=c(2, 3))
par(lwd=2, cex=1.5)
par(cex.axis=.75, font.axis=3)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, clo="blue", bg="green")
par(opar)
plot(dose, drugA, type="b",
col="red", lty=2, pch=2, lwd=2,
main="Clinical Trials for Drug A",
sub="This is hypothetical data",
xlab="Dosage", ylab="Drug Response",
xlim=c(0,60), ylim=c(0, 70))
x <- c(1:10)
y <- x
opar <- par(no.readonly = TRUE)
par(mar = c(5, 4, 4, 8) + 0.1 )
plot(x, y, type="b",
pch=21, col="red",
yaxt="n", lty=3, ann=FALSE)
line(x, z, type="b", pch=22, col="blue", lty=2)
x <- c(1:10)
y <- x
z <- 10/x
opar <- par(no.readonly = TRUE)
par(mar = c(5, 4, 4, 8) + 0.1 )
plot(x, y, type="b",
pch=21, col="red",
yaxt="n", lty=3, ann=FALSE)
line(x, z, type="b", pch=22, col="blue", lty=2)
x <- c(1:10)
y <- x
z <- 10/x
opar <- par(no.readonly = TRUE)
par(mar = c(5, 4, 4, 8) + 0.1 )
plot(x, y, type="b",
pch=21, col="red",
yaxt="n", lty=3, ann=FALSE)
lines(x, z, type="b", pch=22, col="blue", lty=2)
axis(2, at=x, labels=x, col.axis="red", las=2)
axis(4, at=z, labels=round(z, digits=2)
col.axis="blue", las=2, cex.axis=0.7, tck=-.01)
x <- c(1:10)
y <- x
z <- 10/x
opar <- par(no.readonly = TRUE)
par(mar = c(5, 4, 4, 8) + 0.1 )
plot(x, y, type="b",
pch=21, col="red",
yaxt="n", lty=3, ann=FALSE)
lines(x, z, type="b", pch=22, col="blue", lty=2)
axis(2, at=x, labels=x, col.axis="red", las=2)
axis(4, at=z, labels=round(z, digits=2),
col.axis="blue", las=2, cex.axis=0.7, tck=-.01)
mtext("y=1/x", side=4, line=3, cex.lab=1, las=2, col="blue")
title("An Example of Creative Axes",
xlab="X values",
ylab="Y=X")
par(opar)
library(Hmisc)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.5, font.lab=2)
plot(dose, drugA, type="b",
pch=15, lty=1, col="red", ylimc=c(0,60),
main="Drug A vs. Drug B",
xlab="Drug Dosage", ylab="Drug Response")
lines(dose, drug, type="b",
pch=17, lty=2, col="blue")
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.5, font.lab=2)
plot(dose, drugA, type="b",
pch=15, lty=1, col="red", ylimc=c(0,60),
main="Drug A vs. Drug B",
xlab="Drug Dosage", ylab="Drug Response")
lines(dose, drugB, type="b",
pch=17, lty=2, col="blue")
abline(h=c(30), lwd=1.5, lty=2, clo="gray")
library(Hmisc)
minor("topleft", ny=3, tick.ratio=0.5)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.5, font.lab=2)
plot(dose, drugA, type="b",
pch=15, lty=1, col="red", ylimc=c(0,60),
main="Drug A vs. Drug B",
xlab="Drug Dosage", ylab="Drug Response")
lines(dose, drugB, type="b",
pch=17, lty=2, col="blue")
abline(h=c(30), lwd=1.5, lty=2, clo="gray")
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio=0.5)
legend("topleft", inset=.05, title="Drug Type", c("A", "B"),
lty=c(1, 2), pch=c(15, 17), col=c("red", "blue"))
par(opar)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.5, font.lab=2)
plot(dose, drugA, type="b",
pch=15, lty=1, col="red", ylim=c(0,60),
main="Drug A vs. Drug B",
xlab="Drug Dosage", ylab="Drug Response")
lines(dose, drugB, type="b",
pch=17, lty=2, col="blue")
abline(h=c(30), lwd=1.5, lty=2, clo="gray")
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio=0.5)
legend("topleft", inset=.05, title="Drug Type", c("A", "B"),
lty=c(1, 2), pch=c(15, 17), col=c("red", "blue"))
par(opar)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(pin=c(2, 3))
par(lwd=2, cex=1.5)
par(cex.axis=.75, font.axis=3)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
par(opar)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.5, font.lab=2)
plot(dose, drugA, type="b",
pch=15, lty=1, col="red", ylim=c(0,60),
main="Drug A vs. Drug B",
xlab="Drug Dosage", ylab="Drug Response")
lines(dose, drugB, type="b",
pch=17, lty=2, col="blue")
abline(h=c(30), lwd=1.5, lty=2, col="gray")
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio=0.5)
legend("topleft", inset=.05, title="Drug Type", c("A", "B"),
lty=c(1, 2), pch=c(15, 17), col=c("red", "blue"))
par(opar)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.5, font.lab=2)
plot(dose, drugA, type="b",
pch=15, lty=1, col="red", ylim=c(0,60),
main="Drug A vs. Drug B",
xlab="Drug Dosage", ylab="Drug Response")
lines(dose, drugB, type="b",
pch=17, lty=2, col="blue")
abline(h=c(30), lwd=1.5, lty=2, col="gray")
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio=0.5)
legend("topleft", inset=.05, title="Drug Type", c("A", "B"),
lty=c(1, 2), pch=c(15, 17), col=c("red", "blue"))
par(opar)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly = TRUE)
par(lwd=2, cex=1.5, font.lab=2)
plot(dose, drugA, type="b",
pch=15, lty=1, col="red", ylim=c(0,60),
main="Drug A vs. Drug B",
xlab="Drug Dosage", ylab="Drug Response")
lines(dose, drugB, type="b",
pch=17, lty=2, col="blue")
abline(h=c(30), lwd=1.5, lty=2, col="gray")
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio=0.5)
legend("topleft", inset=.05, title="Drug Type", c("A", "B"),
lty=c(1, 2), pch=c(15, 17), col=c("red", "blue"))
par(opar)
attach(mtcars)
plot(wt, png,
main="Mileage vs. Car Weight",
xlab="Weight", ylab="Mileage",
pch=18, col="blue")
attach(mtcars)
plot(wt, mpg,
main="Mileage vs. Car Weight",
xlab="Weight", ylab="Mileage",
pch=18, col="blue")
text(wt, mpg,
row.names(mtcars),
cex=0.6, pos=4, col="red")
detach(mtcars)
attach(mtcars)
plot(wt, mpg,
main="Mileage vs. Car Weight",
xlab="Weight", ylab="Mileage",
pch=18, col="blue")
text(wt, mpg,
row.names(mtcars),
cex=0.6, pos=4, col="red")
detach(mtcars)
opar <- par(no.readonly = TRUE)
par(cex = 1.5)
plot(1:7, 1:7, type="n")
text(3, 3, "Example of default text")
text(4, 4, family="mono", "Example of mono-spaced text")
text(5, 5, family="serif", "Example of serif text")
par(opar)
opar <- par(no.readonly = TRUE)
par(cex = 1.5)
plot(1:7, 1:7, type="n")
text(3, 3, "Example of default text")
text(4, 4, family="mono", "Example of mono-spaced text")
text(5, 5, family="serif", "Example of serif text")
par(opar)
opar <- par(no.readonly = TRUE)
par(cex = 1.5)
plot(1:7, 1:7, type="n")
text(3, 3, "Example of default text")
text(4, 4, family="mono", "Example of mono-spaced text")
text(5, 5, family="serif", "Example of serif text")
par(opar)
demo(plotmath)
opar <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
plot(wt, mpg, main="Scatterplot of wt vs. mpg")
plot(wt, disp, main="Scatterplot of wt vs. disp")
hist(wt, main="Histogram of wt")
boxplot(wt, main="Boxplot of wt")
par(opar)
detach(mtcars)
attach(mtcars)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
hist(wt)
hist(mpg)
hist(disp)
detach(mtcars)
a<-matrix(c(1,1,2,3), 2, 2, byrow = TRUE)
a
opar <- par(no.readonly = TRUE)
par(fig=c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg,
xlab = "Mlies Per Gallon",
ylab = "Car Weight")
par(fig=c(0, 0.8, 0.55, 1), new=TRUE)
boxplot(mtcars$wt, horizontal = TRUE, axes=FALSE)
par(fig=c(0.65, 1, 0, 0.8), new=TRUE)
boxplot(mtcars$mpg, axes=FALSE)
mtext("Enhanced Scatterplot", side=3, outer=TRUE, line=-3)
install.packages("sqldf")
myvars <- c('mpg', 'hp', 'wt')
summary(mtcars[myvars])
install.packages('pastecs')
library(pastecs)
install.packages('pastecs')
library(pastecs)
install.packages("pastecs")
library(pastecs)
myvars <- c('mpg', 'hp', 'wt')
stat.desc(mtcars[myvars])
stat.desc(mtcars[myvars], norm=T)
myvars <- c('mpg', 'hp', 'wt')
aggregate(mtcars[myvars], by=list(am=mtcars$am), mean)
aggregate(mtcars[myvars], by=list(am=mtcars$am), sd)
mystats <- function(x, na.omit=FALSE){}
mystats <- function(x, na.omit=FALSE){
if (na.omit)
x <- x[!is.na(x)]
m <- mean(x)
n <- length(x)
s <- sd(x)
skew <- sum((x-m)^3/s^3)/n
kurt <- sum((x-m)^4/s^4)/n - 3
return(c(n=n, mean=m, stdev=s, skew=skew, kurtosis=kurt))}
library(pastecs)
myvars <- c('mpg', 'hp', 'wt')
dstats <- function(x) sapply(x, mystats)
by(mtcars[myvars], mtcars$am, dstats)
library(vcd)
library(grid)
library(vcd)
head(Arthritis)
mytable <- with(Arthritis, table(Improved))
mytable
prop.table(mytable)
prop.table(mytable)*100
mytable <- xtable(~ Treatment + Improved, data=Arthritis)
mytable <- xtabs(~ Treatment + Improved, data=Arthritis)
mytable
margin.table(mytable, 1)
prop.table(mytable,1)
prop.table(mytable)
addmargins(mytable)
install.packages('gmodels')
library(gmodels)
CrossTable(Arthritis$Treatment, Arthritis$Improved)
library(vcd)
library(grid)
library(vcd)
mytable <- xtabs(~ Treatment+Improved, data=Arthritis)
chisq.test(mytable)
mytable <- xtabs(~ Sex+Improved, data=Arthritis)
chisq.test(mytable)
mytable <- xtabs(~ Treatment+Improved, data=Arthritis)
fisher.test(mytable)
mytable <- xtabs(~ Treatment+Improved+Sex, data=Arthritis)
mantelhaen.test(mytable)
library(vcd)
mytable <- xtabs(~ Treatment+Improved, data=Arthritis)
assocstats(mytable)
states <- state.x77[, 1:6]
cov(states)
cor(states)
cor(states, method='spearman')
cor.test(stats[,3], states[, 5])
cor.test(states[,3], states[, 5])
library(psych)
library(MASS)
t.test(Prob ~ So, data = UScrime)
library(MASS)
with(UScrime, t.test(U1,U2, paired=T))
a <- 30000000000000000000000000000000000000000000000
as.character(a)
options(scipen=3)
a
a <- 30000000000000000000000000000000000000000000000
a
options(scipen=200)
a <- 30000000000000000000000000000000000000000000000
a
options(scipen=1)
a <- 30000000000000000000000000000000000000000000000
a
a <- 30000000000000
a
options(scipen=20)
a <- 30000000000000
a
class(a)
b <- a -1
class(b)
a1 <- as.integer(a)
a1
a <- 300000000
as.integer(a)
a <- 30000000000
class(a)
as.integer(a)
a <- 200000000
class(a)
as.integer(a)
class(as.integer(a))
b <- as.integer(a) - 1
class(b)
b
as.integer(b)
options(scipen = 9)
a <- 200000000
b <- as.integer(a) - 1
as.integer(b)
load("E:/生物统计学课/第四次生统作业题目 (3)/.RData")
load("E:/生物统计学课/第四次生统作业题目 (3)/.RData")
??p.adjuest
??p.adjuest（）
??p.adjust
differential_p_group <- a[a<0.05]
differential_p_group[1]
result <- p.adjust(differential_p_group, method=c("bonferroni", "fdr"))
bon_result <- p.adjust(differential_p_group, method="bonferroni")
summary(bon_result<0.05)
fdr_result <- p.adjust(differential_p_group, method="fdr")
summary(fdr_result<0.05)
fdr_result1 <- p.adjust(differential_p_group[1], method="fdr")
result[1]
differential_p_group[1]
bon_result <- p.adjust(a, method="bonferroni")
fdr_result <- p.adjust(a, method="fdr")
summary(bon_result < 0.05)
summary(fdr_result < 0.05)
bon_result[29849]
fdr_result[29849]
bon_result[1]
fdr_result[1]
summary(a < 0.05)
diff_test <- function(GDS){
normal   <- GDS[1:7]
abnormal <- GDS[8:14]
result   <- var.test(normal, abnormal)
if(result$p.value > 0.05){
t_result <- t.test(normal, abnormal, var.equal = TRUE)
return(t_result$p.value)
}
else{
t_result <- t.test(normal, abnormal)
return(t_result$p.value)
}
}
all_result <- apply(GDS1, 1, diff_test)
summary(all_result<0.05)
names(all_result[all_result<0.05])[47]
bon_result <- p.adjust(all_result, method='bonferroni')
fdr_result <- p.adjust(all_result, method='fdr')
summary(bon_result < 0.05)
summary(fdr_result < 0.05)
